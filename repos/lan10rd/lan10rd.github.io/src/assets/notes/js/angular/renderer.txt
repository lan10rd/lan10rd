


ElementRef has nativeElement which references DOM object, Renderer is an abstraction that doesnt bypass change detection or sanitization unlike elementref manipulation
 
import {Component, Renderer2, ElementRef, ViewChild, AfterViewInit } from '@angular/core';
 
 
constructor(private renderer:Renderer2) {
}
3
 
@ViewChild('hello', { static: false }) divHello: ElementRef;

this.renderer.setProperty(this.divHello.nativeElement,'innerHTML',"Hello Angular")
this.renderer.setStyle(this.divHello.nativeElement, 'color', 'red');
 
 
abstract setStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2): void
 
abstract removeStyle(el: any, style: string, flags?: RendererStyleFlags2): void
 
 
//Template
 
<div #hello>Hello !</div>
 
 
//Component
@ViewChild('hello', { static: false }) divHello: ElementRef;
 
 
setStyle() {
  this.renderer.setStyle(this.divHello.nativeElement, 'color', 'blue');
}
 
 
removeStyle() {
  this.renderer.removeStyle(this.divHello.nativeElement, 'color');
}
 