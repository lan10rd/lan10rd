/** raspberry pi specific **/

//if on raspberry pi, to force headless mode, go into sudo nano /boot/firmware/config.txt:
hdmi_force_hotplug=1
dtoverlay=vc4-fkms-v3d
start_x=1
hdmi_cvt=1920 1080 60 
hdmi_group=2
hdmi_mode=87
hdmi_drive=2

// maybe?
gpu_mem=128

// also seems necessary for docker to use memory controls per container, very important, also for stats to show something other than 0/0, NOTE: These are the 3 settings to add: cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1,  sudo nano /boot/firmware/cmdline.txt 
net.ifnames=0 dwc_otg.lpm_enable=0 console=serial0,115200 cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1 console=tty1 root=LABEL=writable rootfstype=ext4 elevator=deadline rootwait fixrtc


/** sudo without password, sudo nano /etc/sudoers **/
%sudo ALL=NOPASSWD: ALL

/** software (apt) **/
sudo apt update
sudo apt install -y curl wget git zip unzip mergerfs sshfs rsync openssh-client ssh openssh-server openssl dnsutils udftools sshpass exfat-utils exfat-fuse f2fs-tools xfsprogs btrfs-progs net-tools zfsutils-linux quota nfs-kernel-server zsh ksh gcc g++ make python3-pip build-essential chromium-browser locales vim apt-transport-https ca-certificates gnupg-agent software-properties-common gdebi x11vnc sysstat libtool autoconf automake linux-headers-generic dconf-editor gnome-tweak-tool gnome-shell-extensions latte-dock chromium-browser linux-tools-generic gparted

// considering this, kinda adds a weird thing in home folder, like thin client drive or something
xrdp
// do i need this?
gnome-software 

/** virtualbox on amd **/
/** vmware workstation on amd **/
wget --user-agent="Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0" https://www.vmware.com/go/getplayer-linux
chmod +x getplayer-linux
sudo ./getplayer-linux


/** raspberry pi imager **/
#sudo apt install rpi-imager
snap install rpi-imager

/** software (vscode) **/
sudo snap install --classic code
// or, above only works on amd
wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
sudo install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/
sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
rm -f packages.microsoft.gpg
apt update
apt install -y code
#code --install-extension lanl0rd.celeste --user-data-dir /root/.vscode

/** software (docker) **/
// just dooooo, nvm seems to not set it up with a service
sudo snap install docker

// else
sudo apt-get remove docker docker-engine docker.io containerd runc
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
//amd
echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
// arm
echo "deb [arch=arm64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io

/* docker groupadd */
sudo groupadd docker
sudo usermod -aG docker $USER

// sudo nano /etc/docker/daemon.json
{
    "log-driver": "local",
    "log-opts": {
        "max-size": "10m",
        "max-file": "3"
    },
    "hosts": ["tcp://0.0.0.0:2375", "unix:///var/run/docker.sock", "fd://"],
    "experimental": true
}

/* modify /lib/systemd/system/docker.service, look for the dockerd line and remove "-H fd://"  */

sudo systemctl daemon-reload 
sudo systemctl restart docker.service

/* if you are missing software center */
sudo apt install -y software-center
sudo apt install -y software-center*

/* E: if you see package has no installation candidate */
sudo apt-get update
sudo apt-get upgrade

/* software (browsers) */
// brave
sudo apt install apt-transport-https curl
sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main"|sudo tee /etc/apt/sources.list.d/brave-browser-release.list
sudo apt update
sudo apt install brave-browser
// opera
sudo snap install opera // maybe sudo apt install opera-stable
// chromium
sudo apt install chromium-browser -y

/* sshfs setup */
sudo nano /etc/fuse.conf
user_allow_other

/* ssh setup */
// cd $HOME/.ssh or lanl0rd/ssh
ssh-keygen -f test -C "" -t rsa -q -N "" -b 2048
cat test.pub >> ~/.ssh/authorized_keys

# Enabling the root account:
sudo -i
#To enable the Root account (i.e. set a password) use:
sudo passwd root

sudo mkdir -P /root/.ssh
sudo touch /root/.ssh/authorized_keys
sudo chmod -R 777 /root/.ssh
sudo cat test.pub >> root/.ssh/authorized_keys

sudo nano /etc/ssh/sshd_config

PermitRootLogin yes
PubkeyAuthentication yes
ChallengeResponseAuthentication no # erm not entirely sure what this does
PasswordAuthentication yes # for security change to no
UsePAM yes # default

sudo service sshd restart
sudo service ssh restart

sudo systemctl restart sshd

// now test you can jump into server as root
ssh root@localhost -o PreferredAuthentications=publickey -o "StrictHostKeyChecking no" -i $HOME/.ssh/test


/* video setup */
// have to enable x server instead of wayland
sudoedit /etc/gdm3/custom.conf
WaylandEnable=false
sudo systemctl restart gdm3 // or sudo reboot


sudo apt install x11vnc

// if you want you can actually not have to do the below if you just do (ie no password and it runs on 5900!) just make sure wayland is off so x server is used, the above step!
x11vnc -forever -loop -noxdamage -repeat -shared

(to get this on startup command just type startup commands, + button, then just type x11vnc and give it a name x11, no need for a script)

// below no longer seems necessary (unless you still want a password on vnc, though seems annoying)

x11vnc -storepasswd
x11vnc -auth guess -forever -loop -noxdamage -repeat -rfbauth $HOME/.vnc/passwd -rfbport 5901 -shared

// for start after user login add this line in /etc/gdm3/Init/Default right before exit 0... that didnt work, so actually just make a script somewhere, like lanl0rd/space/startup/x11.sh and then hit menu and type startup (startup applications), and add the x11.sh (make sure to chmod u+x x11.sh of course!), there may be a programmatic way to manipulate startup apps

/usr/bin/x11vnc -auth guess -forever -loop -noxdamage -repeat -rfbauth $HOME/.vnc/passwd -rfbport 5901 -shared || true 



/*** customization ***/
sudo apt install gnome-tweak-tool gnome-shell-extensions

// open tweaks, go to extensions, enable user themes, close tweaks and open again, now you can adjust the shell themes
mkdir ~/.icons
mkdir ~/.themes

// (open finder, then ctl + h to see hidden folders, like .icons)

// cursors  download the zip/archive of the cursors you want, you actually extract the folder to ~/.icons (then close tweaks and open it again and go to appearance and you can should see the cursors)

// icons same as cursors (put in ~/.themes), just use icons dropdown in tweaks

// themes, also download themes but put them in ~/.themes and reload tweaks, should see it in shell selection of appearance (note that you need to enable user themes in extensions and reload first, otherwise there is a exclamation point and its grayed out.. only thing outstanding is dock)

// latte dock // cross linux platform dock, seems like you can install docks from here, but you need to hide ubuntu dock


// for changing transparency and color of the dock , 
gsettings set org.gnome.shell.extensions.dash-to-dock transparency-mode 'FIXED'
gsettings set org.gnome.shell.extensions.dash-to-dock background-opacity 0.2

// found an interesting way to achieve a clear one,
gsettings set org.gnome.shell.extensions.dash-to-dock apply-custom-theme 'true'

/**** do this? ****/
after install tweaks and enabling user themes and reloading
1) turn off trash, home, drives on desktop by right clicking desktop > settings
2) in ~/.themes drop big sur light/dark and in tweaks > appearance > applications select light
3) change cursor after dropping cursor in ~/.icons
4) shell can be made the light one
5) icons can be light sur once you drop light sur icons in .icons
6) 
    a)gsettings set org.gnome.shell.extensions.dash-to-dock apply-custom-theme 'true'
    b) i think you can also open dconf, navigate to org.gnome.shell.extensions.dash-to-dock and look for 
        - extend-height  'false'
        - dock-fixed 'true'
        - dash-max-icon-size '20'
    c) can also play with latte-dock but i think its not worth it necessarily, might be a little bloaty

I actually went in using dconf editor and transparency mode was already fixed, and i set opacity to 0

now you can have clear side bar and cool cursors, last thing left is the top bar



// audio
sudo nano /etc/pulse/default.pa
load-module module-native-protocol-tcp auth-anonymous=1
sudo reboot