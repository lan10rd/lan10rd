git init
git config receive.denyCurrentBranch ignore
git config --global user.email "****@gmail.com"
git config --global user.name "simba"
git clean -fd
New-ItemProperty -Path "HKLM:\SOFTWARE\OpenSSH" -Name DefaultShell -Value "C:\Program Files\Git\bin\bash.exe" -PropertyType String -Force
git config --system core.longpaths true
git pull origin master -r
git config --get remote.origin.url

---- aliases ----
alias earth_add="git submodule foreach --recursive git add ./"
alias earth_commit="git submodule foreach --recursive git commit"
alias earth_checkout="git pull && git submodule foreach --recursive git checkout master"
alias earth_pull="git pull && git submodule foreach --recursive git pull origin master"
alias earth_rm_origin="git rm remote origin && git submodule foreach --recursive git remote rm origin"
alias earth_upstream="git fetch && git checkout master && git branch --set-upstream-to=origin/master master"
alias earth_stash="git submodule foreach --recursive git stash"
alias earth_fetch="git submodule foreach --recursive git fetch --all"
alias earth_clean="git submodule foreach --recursive git clean -fdx"
alias earth_reset="git submodule foreach --recursive git reset --hard origin/master"
alias earth_fucked="earth_stash && earth_fetch && earth_clean && earth_reset"
alias earth_git_web_mac="git instaweb --httpd=webrick"
alias earth_git_web_mac_stop="git instaweb --httpd=webrick --stop"

---- git web ----
** mac **
git instaweb --httpd=webrick
git instaweb --httpd=webrick --stop

--- fucked ----
git stash --include-untracked
git fetch --all
git clean -fdx
git reset --hard origin/master

--- origin ----
** this is so f*****, if you manually remove a remote and then set it manually, you alsoooo need to set the upstream branch origin/master to be the master branch locally, so basically after rm_origin and git remote add origin ~/origin also run earth_upstream! **
git remote rm origin
git remote add origin ~/earth
git branch --set-upstream-to=origin/master master
git pull
git remote set-url origin ~/../../Volumes/xtreme/earth
git remote show origin
git remote -v
git push --set-upstream origin master -f

---- auto pull ----
git fetch
git merge -X theirs
git merge -X theirs master
** -X ours **
** git pull  is shorthand for: **
git fetch
git merge

---- merge ----
to merge a branch feature/a into master:

git checkout master
git merge feature/a

---- removing branch ----
to then delete feature/a branch,
git branch -d feature/a
git branch -D feature/a  ** (force regardless of merges) **

----- submodules -----
** after git clone you will get folders with submodule but not submodule themselves **

git submodule update --init --recursive

** or all in one**
git clone --recurse-submodule

git submodule update --recursive
git submodule foreach --recursive git checkout master
git submodule foreach --recursive git pull

git submodule foreach "(git checkout master; git pull)&"
git submodule add ./x
git submodule init
git submodule update

** foreach **
git submodule foreach 'git diff'

** some suggested aliases **
git config alias.sdiff '!'"git diff && git submodule foreach 'git diff'"
git config alias.spush 'push --recurse-submodules=on-demand'
git config alias.supdate 'submodule update --remote --merge'