docker node ls
docker info

oq2alxltux1dtty5rwyndwagz *   docker-desktop      Ready               Active              Leader              19.03.12
The * next to the node ID indicates that youâ€™re currently connected on this node.

Docker Engine swarm mode automatically names the node for the machine host name. The tutorial covers other columns in later steps.

-- swarm --
docker network create -d overlay --attachable earth_network_overlay

docker service rm glass_router_nginx || true && docker service create --network=earth_network_overlay  --name glass_router_nginx -p 80:80 -p 443:443 nginx:alpine
docker service rm glass_router_nginx || true && docker service create --name glass_router_nginx -p 80:80 -p 81:80 nginx:alpine

docker service rm glass_router_nginx || true && docker service create --replicas 1 --network=earth_network_overlay  --name glass_router_nginx --mount type=bind,src=/home/simba/earth,dst=/earth,readonly=true --mount  type=bind,src=/home/simba/earth/systems/docker/nginx/,dst=/etc/nginx,readonly=true -p 80:80 -p 443:443 nginx:alpine
docker service rm glass_router_nginx || true && docker service create --network=earth_network_overlay  --name glass_router_nginx --mount type=bind,src=/Users/simba/earth,dst=/earth,readonly=true --mount  type=bind,src=/Users/simba/earth/systems/docker/nginx/,dst=/etc/nginx,readonly=true -p 80:80 -p 443:443 nginx:alpine

docker service rm glass_router_nginx || true && docker service create --network=earth_network_overlay  --name glass_router_nginx --mount type=bind,src=/home/simba/earth,dst=/earth,readonly=true --mount  type=bind,src=/home/simba/earth/systems/docker/nginx/,dst=/etc/nginx,readonly=true -p 80:80 -p 443:443 nginx:alpine
docker service rm glass_router_nginx || true && docker service create --network=earth_network_overlay  --name glass_router_nginx --mount type=bind,src=/Users/simba/earth,dst=/earth,readonly=true --mount  type=bind,src=/Users/simba/earth/systems/docker/nginx/,dst=/etc/nginx,readonly=true -p 80:80 -p 443:443 nginx:alpine

docker service rm glass_earth-api_moon || true && docker service create --name glass_earth-api_moon --network=earth_network_overlay --mount type=bind,src=/home/simba/earth,dst=/root/earth --mount type=bind,src=/home/simba/earth/realms/glass/dist/earth-api,dst=/app/dist,readonly=true --mount type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock --env EARTH_ROOT=/root/earth/ -w /app/dist --publish 34274 nest/glass node main.js --expose-gc --preserve-symlinks --preserve-symlinks-main
docker service rm glass_earth-api_moon || true && docker service create --name glass_earth-api_moon --network=earth_network_overlay --mount type=bind,src=/Users/simba/earth,dst=/root/earth --mount type=bind,src=/Users/simba/earth/realms/glass/dist/earth-api,dst=/app/dist,readonly=true --mount type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock --env EARTH_ROOT=/root/earth/ -w /app/dist --publish 34274 nest/glass node main.js --expose-gc --preserve-symlinks --preserve-symlinks-main


docker service rm glass_passport-api_moon || true && docker service create --name glass_passport-api_moon --network=earth_network_overlay --mount type=bind,src=/home/simba/earth,dst=/root/earth --mount type=bind,src=/home/simba/earth/realms/glass/dist/passport-api,dst=/app/dist,readonly=true --mount type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock --env EARTH_ROOT=/root/earth/ -w /app/dist --publish 6455 nest/glass node main.js --expose-gc --preserve-symlinks --preserve-symlinks-main
docker service rm glass_passport-api_moon || true && docker service create --name glass_passport-api_moon --network=earth_network_overlay --mount type=bind,src=/Users/simba/earth,dst=/root/earth --mount type=bind,src=/Users/simba/earth/realms/glass/dist/passport-api,dst=/app/dist,readonly=true --mount type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock --env EARTH_ROOT=/root/earth/ -w /app/dist --publish 6455 nest/glass node main.js --expose-gc --preserve-symlinks --preserve-symlinks-main

docker service rm demo || true && docker service create  --replicas 3 --name demo --publish src=8080,target=80 nginx:alpine

docker service rm demo || true && docker service create --replicas 3 --name demo --publish src=8080,target=80 nginx:alpine
docker service rm demo || true && docker service create --name demo -p 3000 nest


docker service create --replicas 1 --network=earth_network_swarm --name demo1 -p 81:80 nginx:alpine

docker swarm join --token SWMTKN-1-0oxsn9evlbfzr2tmalh80juxmxxh1qx1b2xm2epky5q541jggh-9tbl6nwx5xgip7wohl2d6pnav 192.168.65.3:2377

docker service create --replicas 1 --network=earth_network  --name glass.router.nginx -v ~/earth/systems/docker/nginx/:/etc/nginx:ro -v ~/earth:/earth:ro -p 80:80 -p 443:443 nginx:alpine

docker network create --driver overlay earth_network

docker service create \
    --replicas 1 \
    --network=earth_network_swarm\
    --name glass-router-nginx\
    --publish mode=host,target=80,published=80 \
    --publish mode=host,target=443,published=443 \
    --mount type=bind,src=~/earth,dst=/earth\
    nginx:alpine

docker service create --replicas 1 --network=earth_network_swarm --name glass.router.nginx --mount src=/Users/simba,dst=/earth --mount ~/earth:/earth:ro -p 81:80 nginx:alpine

docker rm glass.router.nginx --force || true && docker run --restart=always -dit --network=earth_network -m 100mb --name glass.router.nginx -v ~/earth/systems/docker/nginx/:/etc/nginx:ro -v ~/earth:/earth:ro -p 80:80 -p 443:443 nginx:alpine

docker run -dit --network=earth_network --name demo1  -p 81:80 nginx:alpine

ifconfig
lo0: flags=8049<UP,LOOPBACK,RUNNING,MULTICAST> mtu 16384
    options=1203<RXCSUM,TXCSUM,TXSTATUS,SW_TIMESTAMP>
    inet 127.0.0.1 netmask 0xff000000 
    inet6 ::1 prefixlen 128 
    inet6 fe80::1%lo0 prefixlen 64 scopeid 0x1 
    nd6 options=201<PERFORMNUD,DAD>
gif0: flags=8010<POINTOPOINT,MULTICAST> mtu 1280
stf0: flags=0<> mtu 1280
ap1: flags=8802<BROADCAST,SIMPLEX,MULTICAST> mtu 1500
    options=400<CHANNEL_IO>
    ether f2:18:98:9a:d1:6a 
    media: autoselect
    status: inactive
en0: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500
    options=400<CHANNEL_IO>
    ether f0:18:98:9a:d1:6a 
    inet6 fe80::4e6:1c5b:ff3f:91e6%en0 prefixlen 64 secured scopeid 0x6 
    inet 192.168.0.8 netmask 0xffffff00 broadcast 192.168.0.255
    nd6 options=201<PERFORMNUD,DAD>
    media: autoselect
    status: active
en1: flags=8963<UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX,MULTICAST> mtu 1500
    options=460<TSO4,TSO6,CHANNEL_IO>
    ether 82:76:d7:03:9c:01 
    media: autoselect <full-duplex>
    status: inactive
en2: flags=8963<UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX,MULTICAST> mtu 1500
    options=460<TSO4,TSO6,CHANNEL_IO>
    ether 82:76:d7:03:9c:00 
    media: autoselect <full-duplex>
    status: inactive
bridge0: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500
    options=63<RXCSUM,TXCSUM,TSO4,TSO6>
    ether 82:76:d7:03:9c:01 
    Configuration:
        id 0:0:0:0:0:0 priority 0 hellotime 0 fwddelay 0
        maxage 0 holdcnt 0 proto stp maxaddr 100 timeout 1200
        root id 0:0:0:0:0:0 priority 0 ifcost 0 port 0
        ipfilter disabled flags 0x0
    member: en1 flags=3<LEARNING,DISCOVER>
            ifmaxaddr 0 port 8 priority 0 path cost 0
    member: en2 flags=3<LEARNING,DISCOVER>
            ifmaxaddr 0 port 9 priority 0 path cost 0
    nd6 options=201<PERFORMNUD,DAD>
    media: <unknown type>
    status: inactive
p2p0: flags=8843<UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST> mtu 2304
    options=400<CHANNEL_IO>
    ether 02:18:98:9a:d1:6a 
    media: autoselect
    status: inactive
awdl0: flags=8943<UP,BROADCAST,RUNNING,PROMISC,SIMPLEX,MULTICAST> mtu 1484
    options=400<CHANNEL_IO>
    ether 9e:c7:b1:a7:6a:6d 
    inet6 fe80::9cc7:b1ff:fea7:6a6d%awdl0 prefixlen 64 scopeid 0xc 
    nd6 options=201<PERFORMNUD,DAD>
    media: autoselect
    status: active
llw0: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500
    options=400<CHANNEL_IO>
    ether 9e:c7:b1:a7:6a:6d 
    inet6 fe80::9cc7:b1ff:fea7:6a6d%llw0 prefixlen 64 scopeid 0xd 
    nd6 options=201<PERFORMNUD,DAD>
    media: autoselect
    status: active
utun0: flags=8051<UP,POINTOPOINT,RUNNING,MULTICAST> mtu 1380
    inet6 fe80::892:83e5:b7ce:87a9%utun0 prefixlen 64 scopeid 0xe 
    nd6 options=201<PERFORMNUD,DAD>
utun1: flags=8051<UP,POINTOPOINT,RUNNING,MULTICAST> mtu 2000
    inet6 fe80::ec39:5341:9870:cd21%utun1 prefixlen 64 scopeid 0xf 
    nd6 options=201<PERFORMNUD,DAD>
utun2: flags=8051<UP,POINTOPOINT,RUNNING,MULTICAST> mtu 1380
    inet6 fe80::321f:7303:dba0:3e11%utun2 prefixlen 64 scopeid 0x10 
    nd6 options=201<PERFORMNUD,DAD>
utun3: flags=8051<UP,POINTOPOINT,RUNNING,MULTICAST> mtu 1380
    inet6 fe80::d1e0:ae9a:a657:b2d4%utun3 prefixlen 64 scopeid 0x11 
    nd6 options=201<PERFORMNUD,DAD>
utun4: flags=8051<UP,POINTOPOINT,RUNNING,MULTICAST> mtu 1380
    inet6 fe80::7401:f4a0:fd83:92f1%utun4 prefixlen 64 scopeid 0x12 
    nd6 options=201<PERFORMNUD,DAD>
utun5: flags=8051<UP,POINTOPOINT,RUNNING,MULTICAST> mtu 1380
    inet6 fe80::3341:12c7:53d3:c31b%utun5 prefixlen 64 scopeid 0x13 
    nd6 options=201<PERFORMNUD,DAD>
en3: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500
    ether ac:de:48:00:11:22 
    inet6 fe80::aede:48ff:fe00:1122%en3 prefixlen 64 scopeid 0x4 
    nd6 options=201<PERFORMNUD,DAD>
    media: autoselect (100baseTX <full-duplex>)
    status: active
en9: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500
    options=6407<RXCSUM,TXCSUM,VLAN_MTU,CHANNEL_IO,PARTIAL_CSUM,ZEROINVERT_CSUM>
    ether a0:ce:c8:c4:77:6b 
    inet6 fe80::1c31:aa90:f350:3a8c%en9 prefixlen 64 secured scopeid 0x14 
    inet 192.168.0.17 netmask 0xffffff00 broadcast 192.168.0.255
    nd6 options=201<PERFORMNUD,DAD>
    media: autoselect (1000baseT <full-duplex>)
    status: active
