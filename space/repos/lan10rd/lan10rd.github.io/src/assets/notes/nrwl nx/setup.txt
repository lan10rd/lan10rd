npx create-nx-workspace
npm install -g nx // if you want nx cli for commands like nx list to list plugins
nx help

npm install -D @nrwl/nest
npm install -D @nrwl/angular

// use --dry-run first with commands to ensure that is really the change you want


// you can run many builds or other commands at once
nx run-many --target=build --all
nx run-many --target=build --all --parallel --maxParallel=8
nx run-many --target=build --projects=app1,app2
nx run-many --target=build --projects=app1,app2 --with-deps
nx run-many --target=build --all --prod

// run by affected code (git changes)
nx affected --target=build
nx affected --target=build --parallel --maxParallel=8
nx affected --target=build --parallel --maxParallel=8 --base=origin/development --head=$CI_BRANCH_NAME

// Loading Environment Variables
By default, Nx will load any environment variables you place in the following files:

workspaceRoot/apps/my-app/.local.env
workspaceRoot/apps/my-app/.env
workspaceRoot/.local.env
workspaceRoot/.env
Order is important. Nx will move through the above list, ignoring files it can't find, and loading environment variables into the current process for the ones it can find. If it finds a variable that has already been loaded into the process, it will ignore it. It does this for two reasons:

Developers can't accidentally overwrite important system level variables (like NODE_ENV)
Allows developers to create .local.env files for their local environment and override any project defaults set in .env
For example:

workspaceRoot/apps/my-app/.local.env contains AUTH_URL=http://localhost/auth
workspaceRoot/apps/my-app/.env contains AUTH_URL=https://prod-url.com/auth
Nx will first load the variables from apps/my-app/.local.env into the process. When it tries to load the variables from apps/my-app/.env, it will notice that AUTH_URL already exists, so it will ignore it.
We recommend nesting your app specific env files in apps/your-app, and creating workspace/root level env files for workspace-specific settings (like the Nx Cloud token).

Pointing to custom env files
If you want to load variables from env files other than the ones listed above:

Use the env-cmd package: env-cmd -f .qa.env nx serve
Use the envFile option of the run-commands builder and execute your command inside of the builder

// Other Commands
nx print-affected prints information about affected projects in the workspace.

nx print-affected
Syntax: nx print-affected
nx dep-graph launches a visual graph of the dependencies between your projects.

nx dep-graph
Syntax: nx dep-graph
nx affected:dep-graph launches the dependency graph with all affected projects highlighted.

nx affected:dep-graph
Syntax: nx affected:dep-graph
nx list lists all installed and available plugins.

nx list
Syntax: nx list
nx report prints basic information about the plugins used

nx report
Syntax: nx report
nx format:write formats your code

nx format:write
Syntax: nx format:write
nx format:check checks that your code is formatted

nx format:check
Syntax: nx format:check